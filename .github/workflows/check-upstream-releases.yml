name: Auto-Build Docker Images on Upstream Releases

on:
  schedule:
    # Check every 30 minutes for new releases
    - cron: '*/30 * * * *'
  workflow_dispatch: # Keep manual trigger for testing

permissions:
  contents: read

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    if: github.repository == 'jeremiah-k/meshtastic-matrix-relay'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check for new releases
        id: check
        # checkov:skip=CKV_GHA_3:Public API calls are safe
        run: |
          echo "üîç Checking for new releases in geoffwhittington/meshtastic-matrix-relay..."

          # Get latest release from main repo
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/geoffwhittington/meshtastic-matrix-relay/releases/latest | jq -r '.tag_name')
          echo "üìã Latest upstream release: $LATEST_RELEASE"

          if [ "$LATEST_RELEASE" = "null" ] || [ -z "$LATEST_RELEASE" ]; then
            echo "‚ùå No releases found in upstream repo"
            echo "should_build=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Remove 'v' prefix for Docker tag comparison
          DOCKER_TAG=${LATEST_RELEASE#v}
          echo "üê≥ Checking for Docker tag: $DOCKER_TAG"

          # Check if we have a Docker image for this release
          # Use Docker Hub API v2 to check if tag exists
          DOCKER_CHECK=$(curl -s "https://hub.docker.com/v2/repositories/tadchilly/mmrelay/tags/${DOCKER_TAG}" | jq -r '.name // "null"')

          if [ "$DOCKER_CHECK" = "null" ]; then
            echo "üöÄ New release found: $LATEST_RELEASE (Docker tag: $DOCKER_TAG)"
            echo "üì¶ No Docker image exists yet - triggering build..."
            echo "should_build=true" >> $GITHUB_OUTPUT
            echo "release_tag=$LATEST_RELEASE" >> $GITHUB_OUTPUT
            echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Docker image already exists for release $LATEST_RELEASE (tag: $DOCKER_TAG)"
            echo "‚è≠Ô∏è  Skipping build..."
            echo "should_build=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        if: steps.check.outputs.should_build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: steps.check.outputs.should_build == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        if: steps.check.outputs.should_build == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/mmrelay:${{ steps.check.outputs.docker_tag }}
            ${{ secrets.DOCKER_USERNAME }}/mmrelay:latest
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build completion notification
        if: steps.check.outputs.should_build == 'true'
        run: |
          echo "‚úÖ Docker image built and pushed successfully!"
          echo "üê≥ Release: ${{ steps.check.outputs.release_tag }}"
          echo "üì¶ Docker tag: ${{ steps.check.outputs.docker_tag }}"
          echo "üîó Available at: https://hub.docker.com/r/${{ secrets.DOCKER_USERNAME }}/mmrelay/tags"

      - name: No build needed notification
        if: steps.check.outputs.should_build == 'false'
        run: |
          echo "‚ÑπÔ∏è  No new releases found or Docker images already exist"
          echo "üîÑ Will check again in 30 minutes"

      - name: Update Docker Hub description
        if: steps.check.outputs.should_build == 'true'
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
          repository: ${{ secrets.DOCKER_USERNAME }}/mmrelay
          readme-filepath: ./docs/DOCKER.md
