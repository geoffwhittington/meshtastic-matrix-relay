name: Build and Push Docker Image

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - test

env:
  REGISTRY: docker.io
  IMAGE_NAME: mmrelay

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.repository == 'jeremiah-k/meshtastic-matrix-relay'
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Extract version and git SHA
      id: get_version
      run: |
        VERSION=$(grep "version =" setup.cfg | sed 's/.*= //')
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "Extracted version: $VERSION"
        GIT_SHA=$(git rev-parse --short HEAD)
        echo "GIT_SHA=$GIT_SHA" >> $GITHUB_ENV

        # Set DOCKER_TAG based on event type
        if [ "${{ github.event_name }}" == "release" ]; then
          echo "DOCKER_TAG=$VERSION" >> $GITHUB_ENV
          echo "IS_RELEASE=true" >> $GITHUB_ENV
          echo "Building release version: $VERSION"
        else
          # Manual workflow_dispatch - dev build
          BUILD_TYPE="${{ github.event.inputs.build_type || 'dev' }}"
          echo "DOCKER_TAG=$VERSION-$BUILD_TYPE-$GIT_SHA" >> $GITHUB_ENV
          echo "IS_RELEASE=false" >> $GITHUB_ENV
          echo "Building $BUILD_TYPE version: $VERSION-$BUILD_TYPE-$GIT_SHA"
        fi

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        tags: |
          # For releases: create version tag and latest
          type=raw,value=${{ env.DOCKER_TAG }},enable=true
          type=raw,value=latest,enable=${{ env.IS_RELEASE }}
        labels: |
          org.opencontainers.image.title=Meshtastic Matrix Relay
          org.opencontainers.image.description=Bridge between Meshtastic mesh networks and Matrix chat rooms
          org.opencontainers.image.version=${{ env.VERSION }}
          org.opencontainers.image.revision=${{ env.GIT_SHA }}
          mmrelay.build.type=${{ github.event_name == 'release' && 'release' || github.event.inputs.build_type || 'dev' }}
          mmrelay.build.version=${{ env.VERSION }}
          mmrelay.build.commit=${{ env.GIT_SHA }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Output build information
      run: |
        echo "üê≥ Docker image built and pushed!"
        echo "üì¶ Image: ${{ env.REGISTRY }}/${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}"
        echo "üè∑Ô∏è  Tag: ${{ env.DOCKER_TAG }}"
        if [ "${{ env.IS_RELEASE }}" == "true" ]; then
          echo "üöÄ Release build - also tagged as 'latest'"
        else
          echo "üß™ Development build - tagged as '${{ env.DOCKER_TAG }}'"
        fi

    - name: Update Docker Hub description
      if: github.event_name == 'release'
      uses: peter-evans/dockerhub-description@v4
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}
        repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
        readme-filepath: ./DOCKER.md
